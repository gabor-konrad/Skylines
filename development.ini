#
# SkyLines - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
email_from = skylines@localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8080

[app:main]
use = egg:SkyLines
full_stack = true
#lang = ru
cache_dir = %(here)s/data
beaker.session.key = skylines
beaker.session.secret = 4090eda8-6d94-4d32-9c94-833e075a43f0

# Disable template autoreload to boost performances in production
#auto_reload_templates = false

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# pick the form for your database
# %(here) may include a ':' character on Windows environments; this can
# invalidate the URI when specifying a SQLite db via path name
# sqlalchemy.url=postgres://username:password@hostname:port/databasename
# sqlalchemy.url=mysql://username:password@hostname:port/databasename


# If you have sqlite, here's a simple default to get you started
# in development

sqlalchemy.url = postgres:///skylines
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# This line ensures that Genshi will render xhtml when sending the
# output. Change to html or xml, as desired.
templating.genshi.method = xhtml

# if you are using Mako and want to be able to reload
# the mako template from disk during the development phase
# you should say 'true' here
# This option is only used for mako templating engine
# WARNING: if you want to deploy your application using a zipped egg
# (ie: if your application's setup.py defines zip-safe=True, then you
# MUST put "false" for the production environment because there will
# be no disk and real files to compare time with.
# On the contrary if your application defines zip-safe=False and is
# deployed in an unzipped manner, then you can leave this option to true
templating.mako.reloadfromdisk = true

# the compiled template dir is a directory that must be readable by your
# webserver. It will be used to store the resulting templates once compiled
# by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security reasons.
templating.mako.compiled_templates_dir = %(here)s/data/templates

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

#turn this setting to "min" if you would like tw to produce minified
#javascript files (if your library supports that)
toscawidgets.framework.resource_variant=debug

skylines.imprint_link = http://max.kellermann.name/impressum.html
skylines.analysis.path = /opt/skylines/bin
skylines.files.path = %(here)s/htdocs/files
skylines.files.uri = /files

skylines.temporary_dir = /tmp

# static resource redirections
skylines.static.jquery = /js/jQuery/
skylines.static.fontawesome = http://fortawesome.github.com/Font-Awesome/assets/
skylines.static.bootstrap = http://twitter.github.com/bootstrap/assets/
skylines.static.flot = https://raw.github.com/flot/flot/master/
skylines.static.flot-marks = http://flot-marks.googlecode.com/files/

# how many entries should a list have?
skylines.lists.display_length = 50

# switch to server-side processing for lists with more than ... entries
# this shall not be smaller than the display_lenght setting
skylines.lists.server_side = 250

# mapproxy config file; if commented,
# skylines.map.airspace_tile_url is used instead
#skylines.mapproxy = %(here)s/assets/mapproxy/mapproxy.yaml

skylines.map.airspace_tile_url = http://skylines.xcsoar.org

webassets.base_dir = %(here)s/skylines/public/
webassets.base_url = /

[loggers]
keys = root, skylines, sqlalchemy, auth

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
# "level = WARN" logs neither.  (Recommended for production systems.)
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.

[logger_root]
level = INFO
handlers = console

[logger_skylines]
level = DEBUG
handlers =
qualname = skylines

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[logger_auth]
# A logger for authentication, identification and authorization
# this is for repoze.who and repoze.what:
level = WARN
handlers =
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
